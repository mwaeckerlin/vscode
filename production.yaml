# This is a sample production file
#
# Configuration in .env:
#   Password: Either a PASSWORD or a HASHED PASSWORD:
#    - PASSWORD
#    - HASHED_PASSWORD
#  Hash with: echo -n "your password" | npx argon2-cli -e
#
# Configuration in kong.yaml, please edit and replace:
#   Public HOSTNAME (for routing and to get certificate from letsencrypt):
#    - HOSTNAME:
#   Your E-Mail to register on Let's Encrypt:
#    - EMAIL

version: '3'
services:
  vscode:
    image: mwaeckerlin/vscode
    privileged: true
    volumes:
      - code:/code
    networks:
      - ingress-vscode
    environment:
      HASHED_PASSWORD: # echo -n "YOUR-PASSWORD" | npx argon2-cli -e
      PASSWORD:
    deploy:
      restart_policy:
        condition: on-failure

  fix-access:
    image: mwaeckerlin/very-base
    command: 
     - '/bin/sh'
     - '-c'
     - 'chown -R $${RUN_USER}:$${RUN_GROUP} /code'
    volumes:
      - code:/code

  redis:
    image: redis:latest
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis:/data
    networks:
      - redis-kong
    deploy:
      restart_policy:
        condition: on-failure

  gateway:
    image: kong/kong-gateway
    environment:
      KONG_DATABASE: 'off'
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
      KONG_PREFIX: /var/run/kong
      KONG_DECLARATIVE_CONFIG: /config/kong.yaml
      KONG_LOG_LEVEL:
    ports:
      - "80:8000"
      - "443:8443"
      - "8001:8001"
    healthcheck:
      test: ['CMD', 'kong', 'health']
      interval: 10s
      timeout: 10s
      retries: 10
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - kong-prefix:/var/run/kong
      - kong-tmp:/tmp
      - ./kong.yaml:/config/kong.yaml
    networks:
      - redis-kong
      - ingress-vscode

volumes:
  code:
  redis:
  kong-prefix:
    driver_opts:
      type: tmpfs
      device: tmpfs
  kong-tmp:
    driver_opts:
      type: tmpfs
      device: tmpfs
networks:
  redis-kong:
    driver_opts:
      encrypted: 1
  ingress-vscode:
    driver_opts:
      encrypted: 1